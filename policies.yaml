cat << EOF > policies.yaml
# Create the needed tiers for the rules
apiVersion: projectcalico.org/v3
kind: Tier
metadata:
  name: security
spec:
  order: 125

---

apiVersion: projectcalico.org/v3
kind: Tier
metadata:
  name: platform
spec:
  order: 150
  
---

#Global polcies to allow dns traffic, and quarentine workloads if needed
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: platform.allow-dns
spec:
  egress:
  - action: Allow
    destination:
      ports:
      - 53
      selector: k8s-app == "kube-dns"
    protocol: UDP
    source: {}
  - action: Pass
    destination: {}
    source: {}
  namespaceSelector: twilio == "allowed"||has(fw-zone)
  order: 0
  tier: platform
  types:
  - Egress

---

apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: security.quarantine
spec:
  egress:
  - action: Deny
    destination: {}
    source: {}
  order: 0
  selector: sec == "quarantine"
  tier: security
  types:
  - Egress

---

#Storefront specific rules
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: default.from-dmz-2-trusted
  namespace: storefront
spec:
  egress:
  - action: Allow
    destination:
      ports:
      - 8080
      selector: fw-zone == "trusted"|| app == "logging"
    protocol: TCP
    source: {}
  - action: Allow
    destination:
      nets:
      - 0.0.0.0/0
    source: {}
  order: 10
  selector: fw-zone == "dmz"
  tier: default
  types:
  - Egress

---

apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: default.trusted-rules
  namespace: storefront
spec:
  egress:
  - action: Allow
    destination:
      ports:
      - 8080
      selector: fw-zone == "restricted"||fw-zone == "trusted"
    protocol: TCP
    source: {}
  - action: Allow
    destination:
      domains:
      - '*.twilio.com'
    source: {}
  - action: Allow
    destination:
      ports:
      - 80
      - 443
    protocol: TCP
    source: {}
  ingress:
  - action: Allow
    destination:
      ports:
      - 8080
    protocol: TCP
    source:
      selector: fw-zone == "dmz"||fw-zone == "trusted"
  order: 20
  selector: fw-zone == "trusted"
  tier: default
  types:
  - Ingress
  - Egress
  
---

apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: default.backend-rules
  namespace: storefront
spec:
  egress:
  - action: Allow
    destination:
      ports:
      - 8080
    protocol: TCP
    source: {}
  ingress:
  - action: Allow
    destination:
      ports:
      - 8080
    protocol: TCP
    source:
      selector: fw-zone == "trusted"
  order: 30
  selector: fw-zone == "restricted"
  tier: default
  types:
  - Ingress

---

apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: default.deny-all-storefront
  namespace: storefront
spec:
  egress:
  - action: Deny
    destination:
      namespaceSelector: all()
      selector: all()
    source: {}
  - action: Deny
    destination:
      nets:
      - 0.0.0.0/0
    source: {}
  ingress:
  - action: Deny
    destination: {}
    source:
      namespaceSelector: all()
      selector: all()
  - action: Deny
    destination: {}
    source:
      nets:
      - 0.0.0.0/0
  order: 900
  selector: all()
  tier: default
  types:
  - Ingress
  - Egress
EOF
